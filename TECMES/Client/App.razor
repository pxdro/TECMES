@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <PageTitle>Não Autorizado</PageTitle>
                    @{
                        NavigationManager.NavigateTo("/", false);
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Inexistente</PageTitle>
            @{
                NavigationManager.NavigateTo("/", false);
            }
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();

        var user = (await AuthStateProvider.GetAuthenticationStateAsync()).User;

        if (!user.Identity!.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/login");
        }
    }
}